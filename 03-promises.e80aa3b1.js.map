{"mappings":"gfAAA,IAEuBA,EAAUC,EAFjCC,EAAAC,EAAA,UAEuBH,EAST,EATmBC,EAShB,KAROG,KAAKC,SAAW,GAE7BC,QAAQC,QAAQP,EAAUC,GAE1BK,QAAQE,OAAOR,EAAUC,IAKjCQ,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAEjBC,EAAAS,OAAOC,QAAQ,uBAAwCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,IAE9Da,OAAM,SAAAJ,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAElBC,EAAAS,OAAOC,QAAQ,sBAAuCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return Promise.resolve(position, delay);\n  } else {\n    return Promise.reject(position, delay);\n  }\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n// const makeGreeting = guestName => {\n//   if (guestName === \"\" || guestName === undefined) {\n//     return Promise.reject(\"Guest name must not be empty\");\n//   }\n\n//   return Promise.resolve(`Welcome ${guestName}`);\n// };\n\n// makeGreeting(\"\")\n//   .then(greeting => Notify.success(`✅ Fulfilled promise `))\n//   .catch (error => Notify.failure(`❌ Rejected promise `));\n  "],"names":["position","delay","$h6c0i","parcelRequire","Math","random","Promise","resolve","reject","then","param","Notify","failure","concat","catch"],"version":3,"file":"03-promises.e80aa3b1.js.map"}